#sudo certbot --nginx -d whittileaks.com -d curso.whittileaks.com
upstream buffalo_app {
    server 127.0.0.1:3000;
}

#server {
#	listen 443 ssl;
#	server_name curso.whittileaks.com;
#	ssl_certificate /etc/nginx/ssl/cert.pem;
#	ssl_certificate_key /etc/nginx/ssl/key.pem;
#	location / {
#			proxy_redirect   off;
#			proxy_set_header Host              $http_host;
#			proxy_set_header X-Real-IP         $remote_addr;
#			proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
#			proxy_set_header X-Forwarded-Proto $scheme;
#
#			proxy_pass       http://buffalo_app;
#			# First attempt to serve request as file, then
#			# as directory, then fall back to displaying a 404.
#			# try_files $uri $uri/ =404;
#		}
#	# return 301 http://$server_name$request_uri;
#}

server {
	listen 80 default_server;
	#listen [::]:80 default_server;
	server_name curso.whittileaks.com;

	# Hide NGINX version (security best practice)
	server_tokens off;

	

	location / {
		proxy_redirect   off;
		proxy_set_header Host              $http_host;
		proxy_set_header X-Real-IP         $remote_addr;
		proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;

		proxy_pass       http://buffalo_app;
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		# try_files $uri $uri/ =404;
	}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;